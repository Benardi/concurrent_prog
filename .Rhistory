install.packages("here")
library(here)
library(boot)
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
theme_set(theme_bw())
library(here)
library(boot)
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
theme_set(theme_bw())
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(x = class, y = total_time)) +
geom_boxplot() +
facet_wrap(treads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(x = class, y = total_time)) +
geom_boxplot() +
facet_wrap(~treads)
data %>%
ggplot(aes(x = class, y = total_time)) +
geom_boxplot()
View(data)
data %>%
ggplot(aes(x = class, y = total_time)) +
geom_boxplot() + facet_wrap(~theads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(x = class, y = total_time)) +
geom_boxplot() + facet_wrap(~threads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_boxplot() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_boxplot() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
geom_jitter() +
facet_wrap(~threads)
data %>%
ggplot(aes(y = class, x = total_time)) +
facet_wrap(~elements)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) -> data
data %>%
mutate(total_time = total_time / 1000) %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level)
read_csv(here::here("output/report.csv")) %>% mutate(total_time)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>% mutate(total_time = total_time / 1000000) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>% mutate(total_time = total_time / 1000000000) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>% mutate(total_time = total_time / 10000000) -> data
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level)
data %>%
filter(class != 'CopyOnWriteArrayList' && class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level)
data %>%
filter(class != 'CopyOnWriteArrayList' || class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level)
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level)
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
filter(class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level)
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
filter(class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level) +
geom_jitter()
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
filter(class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level) +
geom_jitter()
data %>%
filter(class == 'CopyOnWriteArrayList') %>%
filter(class == 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level) +
geom_jitter()
data %>%
filter(class == 'CopyOnWriteArrayList') %>%
filter(class == 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level) +
geom_jitter()
data
data %>%
filter(class != 'ConcurrentHashMap') %>%
filter(class != 'SynchronizedMap') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() + facet_wrap(~write_level) +
geom_jitter()
data %>%
ggplot(aes(x =threads, y = total_time)) +
geom_point() +
facet_wrap(~class)
data %>%
ggplot(aes(x =threads, y = total_time)) +
geom_point() +
facet_wrap(~class)
data %>%
ggplot(aes(x =threads, y = total_time)) +
geom_point() +
facet_wrap(~class)
data %>%
ggplot(aes(x =threads, y = total_time)) +
geom_point() +
facet_wrap(~class)
data %>%
filter(class != 'ConcurrentHashMap') %>%
filter(class != 'SynchronizedMap') %>%
ggplot(aes(x =threads, y = total_time)) +
geom_point() +
facet_wrap(~class)
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
filter(class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(x =threads, y = total_time)) +
geom_point() +
facet_wrap(~class)
glimpse(data)
read_csv(here::here("output/report.csv")) %>%
mutate(total_time = as.factor(total_time / 10000000),
elements = as.factor(elements)) -> data
glimpse(data)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
glimpse(data)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>%
mutate(total_time =total_time / 10000000,
elements = as.factor(elements)) -> data
glimpse(data)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>%
mutate(total_time= total_time / 10000000) -> data
glimpse(data)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>%
mutate(total_time= total_time / 10000000) -> data
library(here)
library(boot)
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
theme_set(theme_bw())
read_csv(here::here("output/report.csv")) %>%
mutate(total_time= total_time / 10000000) -> data
glimpse(data)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
data %>%
ggplot(aes(y = total_time, x = elements)) +
geom_boxplot() +
facet_wrap(~class)
data %>%
group_by(elements, class) %>%
ggplot(aes(y = total_time, x = elements)) +
geom_boxplot() +
facet_wrap(~class)
data %>%
ggplot(aes(y = total_time, x = elements, group=elements)) +
geom_boxplot() +
facet_wrap(~class)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads, scales = "free")
data %>%
ggplot(aes(y = total_time, x = elements, group=elements)) +
geom_boxplot() +
facet_wrap(~class,scales = "free")
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
read_csv(here::here("output/report.csv")) %>%
mutate(total_time= total_time / 1000000) -> data
glimpse(data)
data %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~threads)
data %>%
ggplot(aes(y = total_time, x = elements, group=elements)) +
geom_boxplot() +
facet_wrap(~class,scales = "free")
library(here)
library(boot)
library(readr)
library(dplyr)
library(ggplot2)
library(lubridate)
theme_set(theme_bw())
read_csv(here::here("output/perf_result.csv"),
progress = F,
col_types = cols(
RSS = col_integer(),
elapsed = col_character(),
cpu.sys = col_double(),
.user = col_double(),
minor_pagefault = col_integer(),
major_pagefault = col_integer(),
inv_cxt_sw = col_integer(),
vol_cxt_sw = col_integer(),
version = col_character(),
execution = col_integer())) %>%
mutate(elapsed = lubridate::ms(elapsed),
version = as.factor(version)) %>%
mutate(elapsed = lubridate::second(elapsed)) -> perf_data
perf_data %>%
glimpse()
perf_data %>%
ggplot(aes(execution,elapsed,color=version)) +
geom_segment(aes(x = execution, y = 0,
xend = execution, yend = elapsed),
color = "grey50", size=0.06) +
geom_point(size=2) +
labs(x="Execution", y= "Elapsed time (s)",
title="(Chart 1) Elapsed time by execution")
perf_data %>%
ggplot(aes(version,elapsed)) +
geom_boxplot() +
labs(y="Elapsed time (s)",x="program version",
title="(Chart 2) Interquatile range by program version")
my_theta <- function(x, i) {
x %>%
slice(i) -> d
d %>%
group_by(version) %>%
summarise(med = median(elapsed, na.rm = TRUE)) -> y
med_diff = y[y$version == "protected",]$med - y[y$version == "unprotected",]$med
return(med_diff)
}
med_diff.boot <- boot(data = perf_data,
statistic = my_theta,
R = 2000)
plot(med_diff.boot)
result_med_diff <- boot.ci(boot.out = med_diff.boot,
conf = 0.95,
type = "basic")
result_med_diff
X2.5 = c(result_med_diff$basic[4])
X97.5 = c(result_med_diff$basic[5])
elapsed.diff = data.frame(X2.5,X97.5)
elapsed.diff %>%
ggplot(aes(x = "( protected - unprotected )",
ymin = X2.5, ymax = X97.5)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkorange") +
labs(x="", y="elapsed time (difference)") +
ggtitle("(Chart 3) C.I. for the difference of the median")
perf_data %>%
ggplot(aes(execution,inv_cxt_sw,color=version)) +
geom_segment(aes(x = execution, y = 0,
xend = execution, yend = inv_cxt_sw),
color = "grey50", size=0.12) +
geom_point(size=2) +
labs(x="Execution", y="# context switches",
title="(Chart 4) Involutary context switches by execution")
my_theta <- function(x, i) {
x %>%
slice(i) -> d
d %>%
group_by(version) %>%
summarise(med = median(inv_cxt_sw, na.rm = TRUE)) -> y
med_diff = y[y$version == "protected",]$med - y[y$version == "unprotected",]$med
return(med_diff)
}
med_inv_sw.boot <- boot(data = perf_data,
statistic = my_theta,
R = 2000)
plot(med_inv_sw.boot)
result_med_inv_sw <- boot.ci(boot.out = med_inv_sw.boot,
conf = 0.95,
type = "basic")
result_med_inv_sw
X2.5 = c(result_med_inv_sw$basic[4])
X97.5 = c(result_med_inv_sw$basic[5])
inv_sw.diff = data.frame(X2.5,X97.5)
inv_sw.diff %>%
ggplot(aes(x = "(protected - unprotected)",
ymin = X2.5, ymax = X97.5)) +
geom_errorbar(width = .2) +
geom_hline(yintercept = 0, colour = "darkorange") +
labs(x="", y="inv_cxt_sw (difference)") +
ggtitle("(Chart 5) C.I. for the difference of the median")
read_csv(here::here("output/report.csv"),
col_types = cols(
class = col_character(),
elements = col_integer(),
total_time = col_double(),
threads = col_integer(),
write_level = col_integer()),
progress = F) %>%
mutate(total_time = total_time / 1000000) -> data
data %>%
glimpse()
data %>%
ggplot(aes(total_time,class)) +
geom_point() +
facet_wrap(~threads, labeller = "label_both") +
labs(x="Total Time (ms)",y="Collection")
data %>%
ggplot(aes(y = total_time, x = elements, group=elements)) +
geom_boxplot() +
facet_wrap(~class, scales = "free") +
labs(x="Number of elements", y="Total time (ms)")
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
filter(class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~write_level, labeller="label_both") +
labs(y="Collection", x="Total time (ms)")
data %>%
filter(class != 'ConcurrentHashMap') %>%
filter(class != 'SynchronizedMap') %>%
ggplot(aes(y = class, x = total_time)) +
geom_point() +
facet_wrap(~write_level, labeller="label_both") +
labs(y="Collection", x="Total time (ms)")
data %>%
filter(class != 'ConcurrentHashMap') %>%
filter(class != 'SynchronizedMap') %>%
ggplot(aes(x =threads, y = total_time)) +
scale_x_continuous(breaks=seq(1, 10, 3)) +
geom_point() +
facet_wrap(~class) +
labs(x="Number of threads", y="Total time (ms)")
data %>%
filter(class != 'CopyOnWriteArrayList') %>%
filter(class != 'SynchronizedRandomAccessList') %>%
ggplot(aes(x =threads, y = total_time)) +
scale_x_continuous(breaks=seq(1, 10, 3)) +
geom_point() +
facet_wrap(~class) +
labs(x="Number of threads", y="Total time (ms)")
